/* CVS $Id$ */
 
package org.biopax.model;
import com.hp.hpl.jena.rdf.model.Model;
import com.hp.hpl.jena.rdf.model.ModelFactory;
import com.hp.hpl.jena.rdf.model.Resource;
 
/**
 * Vocabulary definitions from /home/wgm/docs/biopax/biopax-level2.owl 
 * @author Auto-generated by schemagen on 24 May 2005 10:50 
 */
public class BioPAXConstants {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://www.biopax.org/release/biopax-level2.owl#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    /** <p>A DNA participant. This class describes any additional special characteristics 
     *  of a DNA molecule, such as base modifications, that are relevant to its participation 
     *  in an interaction.</p>
     */
    public static final Resource dnaParticipant = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#dnaParticipant" );
    
    /** <p>A utility class used to import terms from external controlled vocabularies 
     *  (CVs) into the ontology. To support consistency and compatibility, open, freely 
     *  available CVs should be used whenever possible, such as the Gene Ontology 
     *  (GO). A repository for open biological CVs has been created by the OBO project 
     *  (http://obo.sourceforge.net/).</p>
     */
    public static final Resource openControlledVocabulary = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#openControlledVocabulary" );
    
    /** <p>A sequence location class that describes a site on a sequence, i.e. the position 
     *  of a single nucleotide or amino acid.</p>
     */
    public static final Resource sequenceSite = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#sequenceSite" );
    
    /** <p>A utility class that describes a location on a nucleotide or amino acid sequence.</p> */
    public static final Resource sequenceLocation = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#sequenceLocation" );
    
    /** <p>A physical entity consisting of a sequence of ribonucleotide monophosphates; 
     *  a ribonucleic acid (e.g. messengerRNA, microRNA, ribosomalRNA). A specific 
     *  example is the let-7 microRNA.</p>
     */
    public static final Resource rna = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#rna" );
    
    /** <p>An xref that defines a reference to a publication such as a book, journal 
     *  article, web page, or software manual. The reference may or may not be in 
     *  a database, although references to PubMed are preferred when possible. The 
     *  publication should make a direct reference to the instance it is attached 
     *  to.</p>
     */
    public static final Resource publicationXref = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#publicationXref" );
    
    /** <p>A utility class that defines the biological source of a protein or RNA. Other 
     *  entities are either considered source-neutral (e.g. small molecules) or their 
     *  biological source can be deduced from their constituents. Examples include 
     *  human, mouse liver tissue, and HeLa cells. The optional NAME slot should be 
     *  the full 'Genus species' name of the organism, with the genus capitalized 
     *  and not abbreviated and the species not capitalized and not abbreviated.</p>
     */
    public static final Resource bioSource = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#bioSource" );
    
    /** <p>A sequence location class that describes an interval on a sequence.</p> */
    public static final Resource sequenceInterval = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#sequenceInterval" );
    
    /** <p>A utility class that acts as a pointer to an external object, such as an entry 
     *  in a database or a term in a controlled vocabulary.</p>
     */
    public static final Resource externalReferenceUtilityClass = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#externalReferenceUtilityClass" );
    
    /** <p>A physical entity whose structure is comprised of other physical entities 
     *  bound to each other non-covalently, at least one of which is a macromolecule 
     *  (protein or RNA). Complexes must be stable enough to function as a biological 
     *  unit; in general, the temporary association of an enzyme with its substrate(s) 
     *  should not be considered or represented as a complex. A complex is the physical 
     *  product of an interaction (complex assembly), thus is not an interaction itself. 
     *  Examples of this class include complexes of multiple protein monomers and 
     *  complexes of proteins and small molecules. NOTE: Complexes can be defined 
     *  recursively to describe smaller complexes within larger complexes, e.g., a 
     *  participant in a complex can itself be a complex. NOTE: The boundaries on 
     *  the size of complexes described by this class are not defined here, although 
     *  elements of the cell as large and dynamic as, e.g., a mitochondrion would 
     *  typically not be described using this class (later versions of this ontology 
     *  may include a cellularComponent class to represent these). The strength of 
     *  binding of the components is also not described.</p>
     */
    public static final Resource complex = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#complex" );
    
    /** <p>An interaction in which one or more entities is physically transformed into 
     *  one or more other entities. This class is designed to represent a simple, 
     *  single-step transformation. Multi-step transformations, such as the conversion 
     *  of glucose to pyruvate in the glycolysis pathway, should be represented as 
     *  pathways, if known. Since it is a highly abstract class in the ontology, instances 
     *  of the conversion class should be created rarely, if ever.</p>
     */
    public static final Resource conversion = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#conversion" );
    
    /** <p>A physical entity consisting of a sequence of amino-acids; a protein monomer; 
     *  a single polypeptide chain. An example is the EGFR protein.</p>
     */
    public static final Resource protein = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#protein" );
    
    /** <p>An RNA participant. This class describes any additional special characteristics 
     *  of an RNA molecule, such as secondary structure, that are relevant to its 
     *  participation in an interaction.</p>
     */
    public static final Resource rnaParticipant = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#rnaParticipant" );
    
    /** <p>A control interaction in which a physical entity (a catalyst) increases the 
     *  rate of a conversion interaction by lowering its activation energy. Instances 
     *  of this class describe a pairing between a catalyzing entity and a catalyzed 
     *  conversion. A separate catalysis instance should be created for each different 
     *  conversion that a physical entity may catalyze and for each different physical 
     *  entity that may catalyze a conversion. For example, a bifunctional enzyme 
     *  that catalyzes two different biochemical reactions would be linked to each 
     *  of those biochemical reactions by two separate instances of the catalysis 
     *  class. Typically, each step in a metabolic pathway is either an instance of 
     *  the catalysis class or a spontaneous conversion, which occurs under biological 
     *  conditions without the aid of a catalyzing entity. Synonyms for this class 
     *  include 'facilitation' and 'acceleration'. Examples of this class include 
     *  the catalysis of a biochemical reaction by an enzyme, the enabling of a transport 
     *  interaction by a membrane pore complex, and the facilitation of a complex 
     *  assembly by a scaffold protein.</p>
     */
    public static final Resource catalysis = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#catalysis" );
    
    /** <p>A conversion interaction in which a set of physical entities, at least one 
     *  being a macromolecule (protein or RNA), aggregate via non-covalent interactions. 
     *  One of the participants of a complexAssembly must be an instance of the class 
     *  complex. Synonyms for this class include 'aggregation' and 'complexFormation'. 
     *  Examples of this class include the assembling of the TFB2 and TFB3 proteins 
     *  into the TFIIH complex, and the assembly of the ribosome through aggregation 
     *  of its subunits. NOTE: This class is also used to represent complex disassembly. 
     *  The direction in which the complexAssembly occurs (toward either assembly 
     *  or disassembly) is specified via either the SPONTANEOUS slot or the DIRECTION 
     *  slot (in the catalysis class), depending on whether the interaction occurs 
     *  spontaneously or must be catalyzed in order to occur. NOTE: The following 
     *  are not examples of complex assembly: Covalent phosphorylation of a protein 
     *  (this is a biochemicalReaction), the TFIIH complex itself (this is an instance 
     *  of the complex class, not the complexAssembly class).</p>
     */
    public static final Resource complexAssembly = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#complexAssembly" );
    
    /** <p>A description of the source of this data e.g. a database or person name. Currently, 
     *  this class only contains a free text description, but may be made more structured 
     *  in future levels.</p>
     */
    public static final Resource dataSource = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#dataSource" );
    
    /** <p>A utility class that describes the form of a physical entity in a particular 
     *  experiment. This class is used to support the assertion that a particular 
     *  physical entity participates in an interaction or pathway.</p>
     */
    public static final Resource experimentalForm = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#experimentalForm" );
    
    /** <p>An entity that defines a single biochemical interaction between two or more 
     *  entities. An interaction cannot be defined without the entities it relates. 
     *  Since it is a highly abstract class in the ontology, instances of the interaction 
     *  class should be created rarely. CLASS-DESIGN-RATIONALE: Interaction was chosen 
     *  as it is understood by biologists in a biological context and is compatible 
     *  with PSI-MI (http://psidev.sf.net).</p>
     */
    public static final Resource interaction = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#interaction" );
    
    /** <p>A utility class that describes any additional special characteristics of a 
     *  physical entity required in order for it to participate in an interaction. 
     *  In the current ontology, these include stoichiometric coefficient and cellular 
     *  location. For example, in the interaction describing the transport of L-arginine 
     *  into the cytoplasm in E. coli, the LEFT slot in the interaction would be filled 
     *  with an instance of physicalEntityParticipant that specified the location 
     *  of L-arginine as periplasm and the stoichiometric coefficient as one.</p>
     */
    public static final Resource physicalEntityParticipant = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#physicalEntityParticipant" );
    
    /** <p>An xref that defines a reference to an entity in an external resource that 
     *  does not have the same biological identity as the referring entity. For example, 
     *  if one wished to define a link between a gene G in a BioPAX data collection, 
     *  and the protein product P of that gene in an external database, one would 
     *  use a relationship link, because G and P are different biological entities 
     *  (one is a gene and one is a protein). Another example is a relationship xref 
     *  for a protein that refers to the Gene Ontology biological process, e.g. 'immune 
     *  response,' that the protein is involved in.</p>
     */
    public static final Resource relationshipXref = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#relationshipXref" );
    
    /** <p>A utility class that describes the order in which interactions occur in a 
     *  pathway. The interactions that take place at a pathway step are listed and 
     *  an ordering relationship between pathway steps by pointing to the next pathwayStep(s) 
     *  in the pathway is given. For example, a metabolic pathway may contain a pathway 
     *  step composed of one biochemical reaction (BR1) and one catalysis (CAT1) instance, 
     *  where CAT1 describes the catalysis of BR1.</p>
     */
    public static final Resource pathwayStep = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#pathwayStep" );
    
    /** <p>Any concept that we will refer to as a discrete biological unit when describing 
     *  pathways. This is the root class for all biological concepts in the ontology, 
     *  which include pathways, interactions and physical entities. Synonyms for this 
     *  class include 'thing', 'object' and 'bioentity'. As the most abstract class 
     *  in the ontology, instances of the entity class should be created rarely, if 
     *  ever.</p>
     */
    public static final Resource entity = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#entity" );
    
    /** <p>A protein participant. This class describes any additional special characteristics 
     *  of a protein, such as post-translational modifications, that are relevant 
     *  to its participation in an interaction.</p>
     */
    public static final Resource proteinParticipant = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#proteinParticipant" );
    
    /** <p>Utility classes are created when simple slots are insufficient to describe 
     *  an aspect of an entity or to increase compatibility of this ontology with 
     *  other standards. The utilityClass class is only present to organize the other 
     *  helper classes under one class hierarchy; instances of utilityClass should 
     *  never be created.</p>
     */
    public static final Resource utilityClass = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#utilityClass" );
    
    /** <p>A conversion interaction in which an entity (or set of entities) changes location 
     *  within or with respect to the cell. A transport interaction does not include 
     *  the transporter entity, even if one is required in order for the transport 
     *  to occur. Instead, transporters are linked to transport interactions via the 
     *  catalysis class. A synonym for the transport class is 'translocation'. One 
     *  example of this class is the movement of Na+ into the cell through an open 
     *  voltage-gated channel. NOTE: Transport interactions do not involve chemical 
     *  changes of the participant(s). These cases are handled by the transportWithBiochemicalReaction 
     *  class.</p>
     */
    public static final Resource transport = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#transport" );
    
    /** <p>Confidence that the containing instance actually occurs or exists in vivo, 
     *  usually a statistical measure.</p>
     */
    public static final Resource confidence = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#confidence" );
    
    /** <p>A small molecule participant. This class describes any additional special 
     *  characteristics of a small molecule, such as stoichiometric coefficient, that 
     *  are relevant to its participation in an interaction.</p>
     */
    public static final Resource smallMoleculeParticipant = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#smallMoleculeParticipant" );
    
    /** <p>A utility class that describes the support for a particular assertion, such 
     *  as the existence of an interaction or pathway.</p>
     */
    public static final Resource evidence = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#evidence" );
    
    /** <p>A utility class that defines a small molecule structure. An instance of this 
     *  class can also define additional information about a small molecule, such 
     *  as its chemical formula, names, and synonyms. This information is stored in 
     *  the slot STRUCTURE-DATA, in one of two formats: the CML format (see URL www.xml-cml.org) 
     *  or the SMILES format (see URL www.daylight.com/dayhtml/smiles/). The STRUCTURE-FORMAT 
     *  slot specifies which format used is used. An example is the following SMILES 
     *  string, which describes the structure of glucose-6-phosphate: 'C(OP(=O)(O)O)[CH]1([CH](O)[CH](O)[CH](O)[CH](O)O1)'.</p>
     */
    public static final Resource chemicalStructure = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#chemicalStructure" );
    
    /** <p>A unification defines a reference to an entity in an external resource that 
     *  has the same biological identity as the referring entity. For example, if 
     *  one wished to link from a database record, C, describing a chemical compound 
     *  in a BioPAX data collection to a record, C', describing the same chemical 
     *  compound in an external database, one would use a unification xref since records 
     *  C and C' describe the same biological identity. Generally, unification xrefs 
     *  should be used whenever possible, although there are cases where they might 
     *  not be useful, such as application to application data exchange. NOTE: Unification 
     *  xrefs in physical entities are essential for data integration, but are less 
     *  important in interactions. This is because unification xrefs on the physical 
     *  entities in an interaction can be used to compute the equivalence of two interactions 
     *  of the same type. NOTE: An xref in a protein pointing to a gene, e.g. in the 
     *  LocusLink database, would not be a unification xref since the two entities 
     *  do not have the same biological identity (one is a protein, the other is a 
     *  gene). Instead, this link should be a captured as a relationship xref.</p>
     */
    public static final Resource unificationXref = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#unificationXref" );
    
    /** <p>A sequence location class that describes a feature on a sequence relevant 
     *  to an interaction, such as a binding site or post-translational modification.</p>
     */
    public static final Resource sequenceFeature = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#sequenceFeature" );
    
    /** <p>An interaction in which at least one participant is a physical entity, e.g. 
     *  a binding event. This class should be used as the default for representing 
     *  molecular interactions, such as those defined by PSI-MI level 2. If sufficient 
     *  information on the nature of a molecular interaction is available, a less 
     *  abstract BioPAX interaction class may be used.</p>
     */
    public static final Resource physicalInteraction = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#physicalInteraction" );
    
    /** <p>An interaction in which one entity regulates, modifies, or otherwise influences 
     *  another. Two types of control interactions are defined: activation and inhibition. 
     *  Since this class is a superclass for specific types of control, instances 
     *  of the control class should only be generated when none of its subclasses 
     *  are applicable. One example of an instance of this class would be a small 
     *  molecule that inhibits a pathway by an unknown mechanism. CLASS-NAME-SYNONYMS: 
     *  regulation, mediation</p>
     */
    public static final Resource control = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#control" );
    
    /** <p>A control interaction in which a physical entity modulates a catalysis interaction. 
     *  Biologically, most modulation interactions describe an interaction in which 
     *  a small molecule alters the ability of an enzyme to catalyze a specific reaction. 
     *  Instances of this class describe a pairing between a modulating entity and 
     *  a catalysis interaction. A separate modulation instance should be created 
     *  for each different catalysis that a physical entity may modulate and for each 
     *  different physical entity that may modulate a catalysis instance. A typical 
     *  modulation instance has a small molecule as the controller entity and a catalysis 
     *  instance as the controlled entity. Examples of instances of this class include 
     *  allosteric activation and competitive inhibition of an enzyme's ability to 
     *  catalyze a specific reaction.</p>
     */
    public static final Resource modulation = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#modulation" );
    
    /** <p>An entity that has a physical structure. This class serves as the super-class 
     *  for all physical entities, although its current set of subclasses is limited 
     *  to molecules. Physical entities are frequent building blocks of interactions. 
     *  As a highly abstract class in the ontology, instances of the physicalEntity 
     *  class should be created rarely, if ever. CLASS-DESIGN-RATIONALE: It's difficult 
     *  to find a name that encompasses all of the subclasses of this class without 
     *  being too general. E.g. PSI-MI uses interactor, BIND uses object, BioCyc uses 
     *  chemicals. physicalEntity seems to be a good specialization of entity. CLASS-NAME-SYNONYMS: 
     *  part, interactor, object</p>
     */
    public static final Resource physicalEntity = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#physicalEntity" );
    
    /** <p>Any bioactive molecule that is not a peptide, protein, or RNA. Generally these 
     *  are non-polymeric, but complex carbohydrates and DNA are not explicitly modeled 
     *  as classes in this version of the ontology, thus are forced into this class. 
     *  Note that there is a known lack of adequate small molecule databases to cross-reference 
     *  from this class.</p>
     */
    public static final Resource smallMolecule = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#smallMolecule" );
    
    /** <p>A conversion interaction that is both a biochemical reaction and a transport. 
     *  In transportWithBiochemicalReaction interactions, one or more of the substrates 
     *  change both their location and their physical structure. For example, in the 
     *  PEP-dependent phosphotransferase system, transportation of sugar into an E. 
     *  coli cell is accompanied by the sugar's phosphorylation as it crosses the 
     *  plasma membrane. Also, active transporters that use ATP as an energy source 
     *  fall under this category, even if the only covalent change is the hydrolysis 
     *  of ATP to ADP.</p>
     */
    public static final Resource transportWithBiochemicalReaction = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#transportWithBiochemicalReaction" );
    
    /** <p>A physical entity consisting of a sequence of deoxyribonucleotide monophosphates; 
     *  a deoxyribonucleic acid (e.g. a chromosome, plasmid). A specific example is 
     *  chromosome 7 of Homo Sapiens.</p>
     */
    public static final Resource dna = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#dna" );
    
    /** <p>An entity that consists of a set of interactions. A pathway is a series of 
     *  molecular interactions and reactions, often forming a network, that biologists 
     *  have found useful to group together for organizational, historic, biophysical 
     *  or other reasons. A synonym for this class is 'network'. NOTE: It is possible 
     *  to define a pathway without specifying the interactions within the pathway. 
     *  In this case, the pathway instance could consist simply of a name and could 
     *  be treated as a black box.</p>
     */
    public static final Resource pathway = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#pathway" );
    
    /** <p>A complex participant. This class describes any additional special characteristics 
     *  of a complex, such as cellular location, that are relevant to its participation 
     *  in an interaction.</p>
     */
    public static final Resource complexParticipant = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#complexParticipant" );
    
    /** <p>A utility class that defines a reference between an instance of a class in 
     *  this ontology to an object in an external resource. As the most abstract xref 
     *  class in the ontology, instances of the xref class should be created rarely, 
     *  if ever.</p>
     */
    public static final Resource xref = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#xref" );
    
    /** <p>A conversion interaction in which one or more entities (substrates) undergo 
     *  covalent changes to become one or more other entities (products). The substrates 
     *  of biochemical reactions are defined in terms of sums of species. This is 
     *  what is typically done in biochemistry, and, in principle, all of the EC reactions 
     *  should be biochemical reactions. Example: ATP + H2O = ADP + Pi. In this reaction, 
     *  ATP is considered to be an equilibrium mixture of several species, namely 
     *  ATP4-, HATP3-, H2ATP2-, MgATP2-, MgHATP-, and Mg2ATP. Additional species may 
     *  also need to be considered if other ions (e.g. Ca2+) that bind ATP are present. 
     *  Similar considerations apply to ADP and to inorganic phosphate (Pi). When 
     *  writing biochemical reactions, it is important not to attach charges to the 
     *  biochemical reactants and not to include ions such as H+ and Mg2+ in the equation. 
     *  The reaction is written in the direction specified by the EC nomenclature 
     *  system, if applicable, regardless of the physiological direction(s) in which 
     *  the reaction proceeds. (This definition from EcoCyc) NOTE: Polymerization 
     *  reactions involving large polymers whose structure is not explicitly captured 
     *  should generally be represented as unbalanced reactions in which the monomer 
     *  is consumed but the polymer remains unchanged, e.g. glycogen + glucose = glycogen.</p>
     */
    public static final Resource biochemicalReaction = m_model.createResource( "http://www.biopax.org/release/biopax-level2.owl#biochemicalReaction" );
    
}
